@page "{id:guid}"
@model BwMelder.Pages.Crews.DetailsModel

@{
    ViewData["Title"] = "Mannschaftsdetails";
}

<h1>@ViewData["Title"]</h1>
<partial name="_CrewInfo" model="Model.Crew" />
<hr />

@if (User.Identity?.IsAuthenticated ?? false)
{

    <p>
        Schickt diesen Link an die Trainer.
        Darüber können sie ohne Anmeldung auf diese Mannschaft zugreifen und die Daten ihrer Sportler eintragen:
    </p>
    <div class="input-group">
        <input class="form-control" readonly value="@Model.GetSecretUrl()" />
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" data-toggle="button" onclick="toggleQrCode('@Model.GetSecretUrl()', 'qrCode')">QR-Code</button>
        </div>
    </div>
    <div class="d-flex justify-content-center">
        <div id="qrCode"></div>
    </div>

    <hr />
}
else
{
    <p>
        Bitte registriere hier deine Mannschaft.
        Du kannst deine Eintragungen jederzeit ergänzen und ändern, indem du diese Seite erneut aufrufst.
    </p>
}

<h4>Heimtrainer</h4>
<p class="text-muted">
    Unser Ansprechpartner für die weitere Organsation bis zum BW und die Kommunikation zu den Sportlern
</p>
@if (Model.Crew.HomeCoach == null)
{
    <p>
        <a class="btn btn-primary"
           asp-page="./HomeCoaches/Create"
           asp-route-crewid="@Model.Crew.Id">
            Heimtrainer hinzufügen
        </a>
    </p>
}
else
{
    <div class="card mb-3">
        <div class="card-body">
            <h5 class="card-title">@Html.DisplayFor(model => model.Crew.HomeCoach.FullName)</h5>
            <dl class="row">
                <dt class="col-sm-3 col-lg-2">
                    @Html.DisplayNameFor(model => model.Crew.HomeCoach.Contact.EmailAddress)
                </dt>
                <dd class="col-sm-9 col-lg-10">
                    @Html.DisplayFor(model => model.Crew.HomeCoach.Contact.EmailAddress)
                </dd>
                <dt class="col-sm-3 col-lg-2">
                    @Html.DisplayNameFor(model => model.Crew.HomeCoach.Contact.Phone)
                </dt>
                <dd class="col-sm-9 col-lg-10">
                    @Html.DisplayFor(model => model.Crew.HomeCoach.Contact.Phone)
                </dd>
            </dl>
            <a class="card-link" asp-page="./HomeCoaches/Edit" asp-route-id="@Model.Crew.HomeCoach.Id">Bearbeiten</a>
            <a class="card-link text-danger" asp-page="./HomeCoaches/Delete" asp-route-id="@Model.Crew.HomeCoach.Id">Löschen</a>
        </div>
    </div>
}

@if (Model.Crew.Race.Coxed)
{
    <h4>Steuermensch</h4>

    // Check for a cox among the athletes.
    var cox = Model.Crew.Athletes.FirstOrDefault(a => a.IsCox);
    if (cox == null)
    {
        <p>
            <a class="btn btn-primary"
               asp-page="./Athletes/Create"
               asp-route-crewid="@Model.Crew.Id"
               asp-route-iscox="@true">
                Steuermensch hinzufügen
            </a>
        </p>
    }
    else
    {
        <div class="card mb-3">
            <div class="card-body">
                <partial name="_AthleteBrief" model="cox" />
                <a class="card-link" asp-page="./Athletes/Details" asp-route-id="@cox.Id">Details</a>
                <a class="card-link" asp-page="./Athletes/Edit" asp-route-id="@cox.Id">Bearbeiten</a>
                <a class="card-link text-danger" asp-page="./Athletes/Delete" asp-route-id="@cox.Id">Löschen</a>
            </div>
        </div>
    }
}

<h4>Ruderer</h4>
@{
    // Filter for athletes that are not coxing.
    var rowers = Model.Crew.Athletes.Where(a => !a.IsCox);

    // Show a success message if all rowers have been added.
    if (rowers.Count() == @Model.Crew.Race.RowerCount)
    {
        <p class="text-success">
            Alle eingetragen!
        </p>
    }
    // Show a progress message and a button to add more if some are missing.
    if (Model.Crew.Race.RowerCount > rowers.Count())
    {
        <p class="text-muted">
            @rowers.Count() von @Model.Crew.Race.RowerCount eingetragen
        </p>
        <p>
            <a class="btn btn-primary"
               asp-page="./Athletes/Create"
               asp-route-crewid="@Model.Crew.Id"
               asp-route-iscox="@false">
                Ruderer hinzufügen
            </a>
        </p>
    }

    // Show brief information for each rower.
    foreach (var rower in rowers.OrderBy(r => r.LastName))
    {
        <div class="card mb-3">
            <div class="card-body">
                <partial name="_AthleteBrief" model="rower" />
                <a class="card-link" asp-page="./Athletes/Details" asp-route-id="@rower.Id">Details</a>
                <a class="card-link" asp-page="./Athletes/Edit" asp-route-id="@rower.Id">Bearbeiten</a>
                <a class="card-link text-danger" asp-page="./Athletes/Delete" asp-route-id="@rower.Id">Löschen</a>
            </div>
        </div>
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_QrCodeScriptsPartial");
    }
}